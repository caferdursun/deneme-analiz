"""add_outcome_merge_history_and_merge_tracking

Revision ID: b2ade6e0624f
Revises: e8f11ffa49d1
Create Date: 2025-10-26 18:26:17.228457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b2ade6e0624f'
down_revision: Union[str, None] = 'e8f11ffa49d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER COLUMN, skip this
    # op.alter_column('exams', 'status',
    #            existing_type=sa.VARCHAR(length=25),
    #            type_=sa.String(length=30),
    #            existing_nullable=False,
    #            existing_server_default=sa.text("'confirmed'"))

    # Create outcome_merge_history table
    op.create_table('outcome_merge_history',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('merge_group_id', sa.String(length=36), nullable=False),
        sa.Column('merged_at', sa.DateTime(), nullable=False),
        sa.Column('merged_by', sa.String(length=100), nullable=True),
        sa.Column('original_outcome_id', sa.String(length=36), nullable=False),
        sa.Column('target_outcome_id', sa.String(length=36), nullable=False),
        sa.Column('original_data', sa.JSON(), nullable=True),
        sa.Column('target_data_before', sa.JSON(), nullable=True),
        sa.Column('confidence_score', sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column('similarity_reason', sa.Text(), nullable=True),
        sa.Column('undone_at', sa.DateTime(), nullable=True),
        sa.Column('undone_by', sa.String(length=100), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outcome_merge_history_merge_group_id'), 'outcome_merge_history', ['merge_group_id'], unique=False)
    op.create_index(op.f('ix_outcome_merge_history_original_outcome_id'), 'outcome_merge_history', ['original_outcome_id'], unique=False)
    op.create_index(op.f('ix_outcome_merge_history_target_outcome_id'), 'outcome_merge_history', ['target_outcome_id'], unique=False)

    # Add merge tracking columns to learning_outcomes
    op.add_column('learning_outcomes', sa.Column('merged_into_id', sa.String(length=36), nullable=True))
    op.add_column('learning_outcomes', sa.Column('is_merged', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_learning_outcomes_merged_into_id'), 'learning_outcomes', ['merged_into_id'], unique=False)
    # SQLite doesn't support ALTER TABLE ADD CONSTRAINT, skip foreign key
    # op.create_foreign_key(None, 'learning_outcomes', 'learning_outcomes', ['merged_into_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER TABLE DROP CONSTRAINT, skip this
    # op.drop_constraint(None, 'learning_outcomes', type_='foreignkey')
    op.drop_index(op.f('ix_learning_outcomes_merged_into_id'), table_name='learning_outcomes')
    op.drop_column('learning_outcomes', 'is_merged')
    op.drop_column('learning_outcomes', 'merged_into_id')

    # Drop outcome_merge_history table
    op.drop_index(op.f('ix_outcome_merge_history_target_outcome_id'), table_name='outcome_merge_history')
    op.drop_index(op.f('ix_outcome_merge_history_original_outcome_id'), table_name='outcome_merge_history')
    op.drop_index(op.f('ix_outcome_merge_history_merge_group_id'), table_name='outcome_merge_history')
    op.drop_table('outcome_merge_history')

    # SQLite doesn't support ALTER COLUMN, skip this
    # op.alter_column('exams', 'status',
    #            existing_type=sa.String(length=30),
    #            type_=sa.VARCHAR(length=25),
    #            existing_nullable=False,
    #            existing_server_default=sa.text("'confirmed'"))
    # ### end Alembic commands ###
