"""add subject_name_mappings and learning_outcome_topic_mappings tables

Revision ID: 60dbaf67e8ae
Revises: 6be61f81245e
Create Date: 2025-11-01 14:46:13.140828

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '60dbaf67e8ae'
down_revision: Union[str, None] = '6be61f81245e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create subject_name_mappings table
    op.create_table(
        'subject_name_mappings',
        sa.Column('id', sa.String(36), primary_key=True),
        sa.Column('outcome_subject_name', sa.String(200), nullable=False, index=True),
        sa.Column('curriculum_subject_name', sa.String(100), nullable=False),
        sa.Column('exam_type_id', sa.String(36), sa.ForeignKey('exam_types.id'), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False)
    )

    # Create composite unique index for outcome + exam_type
    op.create_index('ix_outcome_exam_type', 'subject_name_mappings', ['outcome_subject_name', 'exam_type_id'], unique=True)

    # Create learning_outcome_topic_mappings table (many-to-many)
    op.create_table(
        'learning_outcome_topic_mappings',
        sa.Column('id', sa.String(36), primary_key=True),
        sa.Column('learning_outcome_id', sa.String(36), sa.ForeignKey('learning_outcomes.id'), nullable=False, index=True),
        sa.Column('topic_id', sa.String(36), sa.ForeignKey('topics.id'), nullable=False, index=True),
        sa.Column('confidence_score', sa.Integer(), nullable=False),  # 0-100
        sa.Column('is_primary', sa.Boolean(), default=False),  # Highest confidence match
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False)
    )

    # Create composite index for efficient lookups
    op.create_index('ix_outcome_topic_mapping', 'learning_outcome_topic_mappings', ['learning_outcome_id', 'topic_id'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop new tables and indexes
    op.drop_index('ix_outcome_topic_mapping', table_name='learning_outcome_topic_mappings')
    op.drop_table('learning_outcome_topic_mappings')
    op.drop_index('ix_outcome_exam_type', table_name='subject_name_mappings')
    op.drop_table('subject_name_mappings')

    # ### end Alembic commands ###
