"""add_recommendation_tracking_fields

Revision ID: d6cf8a805c38
Revises: b2ade6e0624f
Create Date: 2025-10-26 19:32:40.448369

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd6cf8a805c38'
down_revision: Union[str, None] = 'b2ade6e0624f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Commented out due to SQLite limitations (ALTER COLUMN not supported)
    # op.alter_column('exams', 'status',
    #            existing_type=sa.VARCHAR(length=25),
    #            type_=sa.String(length=30),
    #            existing_nullable=False,
    #            existing_server_default=sa.text("'confirmed'"))

    # Create foreign key for merged learning outcomes (if not exists)
    with op.batch_alter_table('learning_outcomes') as batch_op:
        try:
            batch_op.create_foreign_key('fk_learning_outcomes_merged_into', 'learning_outcomes', ['merged_into_id'], ['id'])
        except:
            pass  # Foreign key may already exist

    # Add new recommendation tracking fields
    op.add_column('recommendations', sa.Column('learning_outcome_ids', sa.JSON(), nullable=True))
    op.add_column('recommendations', sa.Column('status', sa.String(length=20), nullable=True))
    op.add_column('recommendations', sa.Column('last_confirmed_at', sa.DateTime(), nullable=True))
    op.add_column('recommendations', sa.Column('previous_recommendation_id', sa.String(length=36), nullable=True))

    # Create foreign key for previous recommendation
    with op.batch_alter_table('recommendations') as batch_op:
        batch_op.create_foreign_key('fk_recommendations_previous', 'recommendations', ['previous_recommendation_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop recommendation foreign key and columns
    with op.batch_alter_table('recommendations') as batch_op:
        batch_op.drop_constraint('fk_recommendations_previous', type_='foreignkey')
    op.drop_column('recommendations', 'previous_recommendation_id')
    op.drop_column('recommendations', 'last_confirmed_at')
    op.drop_column('recommendations', 'status')
    op.drop_column('recommendations', 'learning_outcome_ids')

    # Drop learning outcomes foreign key (if needed)
    # with op.batch_alter_table('learning_outcomes') as batch_op:
    #     batch_op.drop_constraint('fk_learning_outcomes_merged_into', type_='foreignkey')

    # Commented out due to SQLite limitations
    # op.alter_column('exams', 'status',
    #            existing_type=sa.String(length=30),
    #            type_=sa.VARCHAR(length=25),
    #            existing_nullable=False,
    #            existing_server_default=sa.text("'confirmed'"))
    # ### end Alembic commands ###
